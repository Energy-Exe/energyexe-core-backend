"""add unique constraint to elexon_generation_data

Revision ID: 4e08e582a414
Revises: 27b4f666e96b
Create Date: 2025-08-20 13:00:14.261022

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4e08e582a414'
down_revision = '27b4f666e96b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_eia_gen_unit'), table_name='eia_generation_data')
    op.drop_index(op.f('idx_eia_unique'), table_name='eia_generation_data')
    op.drop_index(op.f('idx_eia_year_month'), table_name='eia_generation_data')
    op.drop_index(op.f('ix_eia_generation_data_month'), table_name='eia_generation_data')
    op.drop_index(op.f('ix_eia_generation_data_period'), table_name='eia_generation_data')
    op.drop_index(op.f('ix_eia_generation_data_plant_code'), table_name='eia_generation_data')
    op.drop_index(op.f('ix_eia_generation_data_year'), table_name='eia_generation_data')
    op.drop_table('eia_generation_data')
    op.drop_index(op.f('idx_taipower_gen_type'), table_name='taipower_generation_data')
    op.drop_index(op.f('idx_taipower_gen_unit'), table_name='taipower_generation_data')
    op.drop_index(op.f('idx_taipower_unique'), table_name='taipower_generation_data')
    op.drop_index(op.f('ix_taipower_generation_data_generation_type'), table_name='taipower_generation_data')
    op.drop_index(op.f('ix_taipower_generation_data_timestamp'), table_name='taipower_generation_data')
    op.drop_index(op.f('ix_taipower_generation_data_unit_name'), table_name='taipower_generation_data')
    op.drop_table('taipower_generation_data')
    op.drop_index(op.f('idx_elexon_data_timestamp_bm_unit_period'), table_name='elexon_generation_data')
    op.create_index('idx_elexon_data_unique', 'elexon_generation_data', ['timestamp', 'bm_unit', 'settlement_period'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_elexon_data_unique', table_name='elexon_generation_data')
    op.create_index(op.f('idx_elexon_data_timestamp_bm_unit_period'), 'elexon_generation_data', ['timestamp', 'bm_unit', 'settlement_period'], unique=False)
    op.create_table('taipower_generation_data',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('generation_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('unit_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('installed_capacity_mw', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('net_generation_mw', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('capacity_utilization_percent', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('generation_unit_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('taipower_generation_data_created_by_id_fkey')),
    sa.ForeignKeyConstraint(['generation_unit_id'], ['generation_units.id'], name=op.f('taipower_generation_data_generation_unit_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name=op.f('taipower_generation_data_updated_by_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('taipower_generation_data_pkey'))
    )
    op.create_index(op.f('ix_taipower_generation_data_unit_name'), 'taipower_generation_data', ['unit_name'], unique=False)
    op.create_index(op.f('ix_taipower_generation_data_timestamp'), 'taipower_generation_data', ['timestamp'], unique=False)
    op.create_index(op.f('ix_taipower_generation_data_generation_type'), 'taipower_generation_data', ['generation_type'], unique=False)
    op.create_index(op.f('idx_taipower_unique'), 'taipower_generation_data', ['timestamp', 'unit_name'], unique=True)
    op.create_index(op.f('idx_taipower_gen_unit'), 'taipower_generation_data', ['generation_unit_id'], unique=False)
    op.create_index(op.f('idx_taipower_gen_type'), 'taipower_generation_data', ['generation_type'], unique=False)
    op.create_table('eia_generation_data',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('period', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('month', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('plant_code', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('plant_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('generation', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=False),
    sa.Column('fuel_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('generation_unit_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('eia_generation_data_created_by_id_fkey')),
    sa.ForeignKeyConstraint(['generation_unit_id'], ['generation_units.id'], name=op.f('eia_generation_data_generation_unit_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name=op.f('eia_generation_data_updated_by_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('eia_generation_data_pkey'))
    )
    op.create_index(op.f('ix_eia_generation_data_year'), 'eia_generation_data', ['year'], unique=False)
    op.create_index(op.f('ix_eia_generation_data_plant_code'), 'eia_generation_data', ['plant_code'], unique=False)
    op.create_index(op.f('ix_eia_generation_data_period'), 'eia_generation_data', ['period'], unique=False)
    op.create_index(op.f('ix_eia_generation_data_month'), 'eia_generation_data', ['month'], unique=False)
    op.create_index(op.f('idx_eia_year_month'), 'eia_generation_data', ['year', 'month'], unique=False)
    op.create_index(op.f('idx_eia_unique'), 'eia_generation_data', ['period', 'plant_code', 'fuel_type'], unique=True)
    op.create_index(op.f('idx_eia_gen_unit'), 'eia_generation_data', ['generation_unit_id'], unique=False)
    # ### end Alembic commands ### 