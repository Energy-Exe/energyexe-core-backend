"""Add data_anomalies table for tracking data quality issues

Revision ID: 348cb620b27f
Revises: 7daf40c2a86e
Create Date: 2025-10-15 15:54:50.674228

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '348cb620b27f'
down_revision = '7daf40c2a86e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_anomalies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('anomaly_type', sa.String(length=100), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('windfarm_id', sa.Integer(), nullable=True),
    sa.Column('generation_unit_id', sa.Integer(), nullable=True),
    sa.Column('period_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('period_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('anomaly_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_by', sa.Integer(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('detected_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['generation_unit_id'], ['generation_units.id'], ),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['windfarm_id'], ['windfarms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_anomaly_period', 'data_anomalies', ['period_start', 'period_end'], unique=False)
    op.create_index('idx_anomaly_type_status', 'data_anomalies', ['anomaly_type', 'status'], unique=False)
    op.create_index('idx_anomaly_windfarm_status', 'data_anomalies', ['windfarm_id', 'status'], unique=False)
    op.create_index(op.f('ix_data_anomalies_anomaly_type'), 'data_anomalies', ['anomaly_type'], unique=False)
    op.create_index(op.f('ix_data_anomalies_id'), 'data_anomalies', ['id'], unique=False)
    op.create_index(op.f('ix_data_anomalies_period_end'), 'data_anomalies', ['period_end'], unique=False)
    op.create_index(op.f('ix_data_anomalies_period_start'), 'data_anomalies', ['period_start'], unique=False)
    op.create_index(op.f('ix_data_anomalies_status'), 'data_anomalies', ['status'], unique=False)
    op.create_index(op.f('ix_data_anomalies_windfarm_id'), 'data_anomalies', ['windfarm_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_data_anomalies_windfarm_id'), table_name='data_anomalies')
    op.drop_index(op.f('ix_data_anomalies_status'), table_name='data_anomalies')
    op.drop_index(op.f('ix_data_anomalies_period_start'), table_name='data_anomalies')
    op.drop_index(op.f('ix_data_anomalies_period_end'), table_name='data_anomalies')
    op.drop_index(op.f('ix_data_anomalies_id'), table_name='data_anomalies')
    op.drop_index(op.f('ix_data_anomalies_anomaly_type'), table_name='data_anomalies')
    op.drop_index('idx_anomaly_windfarm_status', table_name='data_anomalies')
    op.drop_index('idx_anomaly_type_status', table_name='data_anomalies')
    op.drop_index('idx_anomaly_period', table_name='data_anomalies')
    op.drop_table('data_anomalies')
    # ### end Alembic commands ### 