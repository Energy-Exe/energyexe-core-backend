"""Add raw capacity fields and turbine_unit relation remove manual overrides

Revision ID: 1dde591b6ee0
Revises: concurrent_unique_005
Create Date: 2025-09-26 01:53:19.589620

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1dde591b6ee0'
down_revision = 'concurrent_unique_005'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('generation_data', sa.Column('turbine_unit_id', sa.Integer(), nullable=True))
    op.add_column('generation_data', sa.Column('raw_capacity_mw', sa.Numeric(precision=12, scale=3), nullable=True))
    op.add_column('generation_data', sa.Column('raw_capacity_factor', sa.Numeric(precision=5, scale=4), nullable=True))
    op.drop_index(op.f('idx_gen_hour'), table_name='generation_data')
    op.drop_index(op.f('idx_gen_source'), table_name='generation_data')
    op.create_index(op.f('ix_generation_data_hour'), 'generation_data', ['hour'], unique=False)
    op.drop_constraint(op.f('generation_data_override_by_id_fkey'), 'generation_data', type_='foreignkey')
    op.create_foreign_key(None, 'generation_data', 'turbine_units', ['turbine_unit_id'], ['id'])
    op.drop_column('generation_data', 'override_by_id')
    op.drop_column('generation_data', 'override_at')
    op.drop_column('generation_data', 'override_reason')
    op.drop_column('generation_data', 'is_manual_override')
    op.drop_column('generation_data', 'original_value')
    op.drop_index(op.f('idx_raw_created'), table_name='generation_data_raw')
    op.drop_index(op.f('idx_raw_source'), table_name='generation_data_raw')
    op.drop_index(op.f('ix_generation_data_raw_dedup'), table_name='generation_data_raw')
    op.create_index(op.f('ix_generation_data_raw_source'), 'generation_data_raw', ['source'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_generation_data_raw_source'), table_name='generation_data_raw')
    op.create_index(op.f('ix_generation_data_raw_dedup'), 'generation_data_raw', ['source', 'identifier', 'period_start', 'period_end'], unique=False)
    op.create_index(op.f('idx_raw_source'), 'generation_data_raw', ['source'], unique=False)
    op.create_index(op.f('idx_raw_created'), 'generation_data_raw', ['created_at'], unique=False)
    op.add_column('generation_data', sa.Column('original_value', sa.NUMERIC(precision=12, scale=3), autoincrement=False, nullable=True))
    op.add_column('generation_data', sa.Column('is_manual_override', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.add_column('generation_data', sa.Column('override_reason', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('generation_data', sa.Column('override_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('generation_data', sa.Column('override_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'generation_data', type_='foreignkey')
    op.create_foreign_key(op.f('generation_data_override_by_id_fkey'), 'generation_data', 'users', ['override_by_id'], ['id'])
    op.drop_index(op.f('ix_generation_data_hour'), table_name='generation_data')
    op.create_index(op.f('idx_gen_source'), 'generation_data', ['source'], unique=False)
    op.create_index(op.f('idx_gen_hour'), 'generation_data', ['hour'], unique=False)
    op.drop_column('generation_data', 'raw_capacity_factor')
    op.drop_column('generation_data', 'raw_capacity_mw')
    op.drop_column('generation_data', 'turbine_unit_id')
    # ### end Alembic commands ### 